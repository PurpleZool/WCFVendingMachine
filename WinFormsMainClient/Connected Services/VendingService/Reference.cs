//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormsMainClient.VendingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Drink", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary.DrinkObjs")]
    [System.SerializableAttribute()]
    public partial class Drink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int count {
            get {
                return this.countField;
            }
            set {
                if ((this.countField.Equals(value) != true)) {
                    this.countField = value;
                    this.RaisePropertyChanged("count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendingMachine", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary.DrinkObjs")]
    [System.SerializableAttribute()]
    public partial class VendingMachine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinFormsMainClient.VendingService.Drink[] drinksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int operationsMadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double totalAmounField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinFormsMainClient.VendingService.Drink[] drinks {
            get {
                return this.drinksField;
            }
            set {
                if ((object.ReferenceEquals(this.drinksField, value) != true)) {
                    this.drinksField = value;
                    this.RaisePropertyChanged("drinks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int operationsMade {
            get {
                return this.operationsMadeField;
            }
            set {
                if ((this.operationsMadeField.Equals(value) != true)) {
                    this.operationsMadeField = value;
                    this.RaisePropertyChanged("operationsMade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double totalAmoun {
            get {
                return this.totalAmounField;
            }
            set {
                if ((this.totalAmounField.Equals(value) != true)) {
                    this.totalAmounField = value;
                    this.RaisePropertyChanged("totalAmoun");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VendingService.IMainService")]
    public interface IMainService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetDrinks", ReplyAction="http://tempuri.org/IMainService/GetDrinksResponse")]
        WinFormsMainClient.VendingService.Drink[] GetDrinks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetDrinks", ReplyAction="http://tempuri.org/IMainService/GetDrinksResponse")]
        System.Threading.Tasks.Task<WinFormsMainClient.VendingService.Drink[]> GetDrinksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SetDrinks", ReplyAction="http://tempuri.org/IMainService/SetDrinksResponse")]
        void SetDrinks(WinFormsMainClient.VendingService.Drink[] newDrinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SetDrinks", ReplyAction="http://tempuri.org/IMainService/SetDrinksResponse")]
        System.Threading.Tasks.Task SetDrinksAsync(WinFormsMainClient.VendingService.Drink[] newDrinks);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteDrinks", ReplyAction="http://tempuri.org/IMainService/DeleteDrinksResponse")]
        void DeleteDrinks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/DeleteDrinks", ReplyAction="http://tempuri.org/IMainService/DeleteDrinksResponse")]
        System.Threading.Tasks.Task DeleteDrinksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ResetMachine", ReplyAction="http://tempuri.org/IMainService/ResetMachineResponse")]
        void ResetMachine();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/ResetMachine", ReplyAction="http://tempuri.org/IMainService/ResetMachineResponse")]
        System.Threading.Tasks.Task ResetMachineAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetVendingObj", ReplyAction="http://tempuri.org/IMainService/GetVendingObjResponse")]
        WinFormsMainClient.VendingService.VendingMachine GetVendingObj();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetVendingObj", ReplyAction="http://tempuri.org/IMainService/GetVendingObjResponse")]
        System.Threading.Tasks.Task<WinFormsMainClient.VendingService.VendingMachine> GetVendingObjAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetStatus", ReplyAction="http://tempuri.org/IMainService/GetStatusResponse")]
        string GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/GetStatus", ReplyAction="http://tempuri.org/IMainService/GetStatusResponse")]
        System.Threading.Tasks.Task<string> GetStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SellDrink", ReplyAction="http://tempuri.org/IMainService/SellDrinkResponse")]
        void SellDrink(string drinkName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/SellDrink", ReplyAction="http://tempuri.org/IMainService/SellDrinkResponse")]
        System.Threading.Tasks.Task SellDrinkAsync(string drinkName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddDrink", ReplyAction="http://tempuri.org/IMainService/AddDrinkResponse")]
        string AddDrink(WinFormsMainClient.VendingService.Drink drink);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMainService/AddDrink", ReplyAction="http://tempuri.org/IMainService/AddDrinkResponse")]
        System.Threading.Tasks.Task<string> AddDrinkAsync(WinFormsMainClient.VendingService.Drink drink);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainServiceChannel : WinFormsMainClient.VendingService.IMainService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainServiceClient : System.ServiceModel.ClientBase<WinFormsMainClient.VendingService.IMainService>, WinFormsMainClient.VendingService.IMainService {
        
        public MainServiceClient() {
        }
        
        public MainServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WinFormsMainClient.VendingService.Drink[] GetDrinks() {
            return base.Channel.GetDrinks();
        }
        
        public System.Threading.Tasks.Task<WinFormsMainClient.VendingService.Drink[]> GetDrinksAsync() {
            return base.Channel.GetDrinksAsync();
        }
        
        public void SetDrinks(WinFormsMainClient.VendingService.Drink[] newDrinks) {
            base.Channel.SetDrinks(newDrinks);
        }
        
        public System.Threading.Tasks.Task SetDrinksAsync(WinFormsMainClient.VendingService.Drink[] newDrinks) {
            return base.Channel.SetDrinksAsync(newDrinks);
        }
        
        public void DeleteDrinks() {
            base.Channel.DeleteDrinks();
        }
        
        public System.Threading.Tasks.Task DeleteDrinksAsync() {
            return base.Channel.DeleteDrinksAsync();
        }
        
        public void ResetMachine() {
            base.Channel.ResetMachine();
        }
        
        public System.Threading.Tasks.Task ResetMachineAsync() {
            return base.Channel.ResetMachineAsync();
        }
        
        public WinFormsMainClient.VendingService.VendingMachine GetVendingObj() {
            return base.Channel.GetVendingObj();
        }
        
        public System.Threading.Tasks.Task<WinFormsMainClient.VendingService.VendingMachine> GetVendingObjAsync() {
            return base.Channel.GetVendingObjAsync();
        }
        
        public string GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public System.Threading.Tasks.Task<string> GetStatusAsync() {
            return base.Channel.GetStatusAsync();
        }
        
        public void SellDrink(string drinkName) {
            base.Channel.SellDrink(drinkName);
        }
        
        public System.Threading.Tasks.Task SellDrinkAsync(string drinkName) {
            return base.Channel.SellDrinkAsync(drinkName);
        }
        
        public string AddDrink(WinFormsMainClient.VendingService.Drink drink) {
            return base.Channel.AddDrink(drink);
        }
        
        public System.Threading.Tasks.Task<string> AddDrinkAsync(WinFormsMainClient.VendingService.Drink drink) {
            return base.Channel.AddDrinkAsync(drink);
        }
    }
}
